% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/C_aug_bass.R
\name{C_aug_bass}
\alias{C_aug_bass}
\title{Estimate the Augmented Constantine Matrix}
\usage{
C_aug_bass(
  mod,
  prior = NULL,
  mcmc.use = NULL,
  use_native_scale = FALSE,
  func.true = NULL,
  verbose = FALSE
)
}
\arguments{
\item{mod}{a fitted (functional) BASS model. The output of the bass() or bassPCA() functions.}

\item{prior}{a list, like one returned by the \code{build_prior()} function. See the documentation for details.}

\item{mcmc.use}{a vector of indices telling which mcmc draws to use}

\item{use_native_scale}{logical (default `TRUE`). Determines the scale of the inputs for computing the \( C \)-matrix. When `TRUE`, the \( C \)-matrix is computed on the original (native) scale of the input variables. When `FALSE`, the \( C \)-matrix corresponds to the inputs normalized to the \([0, 1]\) range, as used internally by BASS. This also affects derived quantities, such as activity scores..}

\item{func.true}{What are the true values of the functional variable, for a bassPCA model?}

\item{verbose}{logical; should progress be displayed?}
}
\value{
A list representing the posterior distribution of the Constantine matrix.
}
\description{
Closed form estimator of the C_aug matrix using a functional BASS model
}
\details{
The posterior distribution of the augmented C matrix. Note that mod must be a functional bass model; either a \code{bass()} call with \code{xx.func} specified, or an object of class \code{bassBasis} such as the output of a \code{bassPCA()} call.
}
\examples{
# FRIEDMAN FUNCTION
# First input is treated as functional
# Use p=5, so there is one inert variable
f <- function(x, t) {
  10 * sin(pi * t * x[1]) + 20 * (x[2] - 0.5)^2 + 10 * x[3] + 5 * x[4]
}

# ===========================================
#        GENERATE DATA
# ===========================================
XX <- lhs::randomLHS(500, 5)
y1 <- apply(XX, 1, f, t = 0.5)
xfunc <- seq(0, 1, length.out = 20)
yfunc <- t(apply(XX, 1, f, t = xfunc))

}
